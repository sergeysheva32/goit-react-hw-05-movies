{"version":3,"file":"static/js/cast-view.4b336e5c.chunk.js","mappings":"4OAA8B,SAAAA,IAS7B,OAT6BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAC,EAA+BC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGN,MAFlB,mCACNN,EAAG,sCAAAO,OAAyCR,EAAO,YACnDE,EAAM,YAAAM,OAFA,mCAEkB,mBAAAH,EAAAE,KAAA,EAEPE,MAAM,GAADD,OAAIP,GAAGO,OAAGN,IAAU,KAAD,EAAjC,OAARC,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EACKJ,EAASQ,OAAO,KAAD,EAAxB,OAAJP,EAAIC,EAAAK,KAAAL,EAAAO,OAAA,SAEHR,GAAI,yBAAAC,EAAAQ,OAAA,GAAAd,EAAA,MACZe,MAAA,KAAAC,UAAA,CAED,I,UAAA,E,SAX8BC,GAAA,OAAApB,EAAAkB,MAAC,KAADC,UAAA,E,uGCGjBE,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAQhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0KAWhBG,EAAeL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8FAOzBK,EAAQP,EAAAA,EAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2BAIlBO,EAAOT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,iEAGjBS,EAAAA,I,SC/BX,SAASC,EAAUC,GAAc,IAAXC,EAAMD,EAANC,OACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,WAAS,EAAAC,UAClBH,EAAAA,EAAAA,KAAChB,EAAI,CAAAmB,SACFJ,EAAOK,KAAI,SAAAC,GAA0B,IAAvBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACvB,OACEC,EAAAA,EAAAA,MAACrB,EAAI,CAAAe,SAAA,EACHH,EAAAA,EAAAA,KAACV,EAAY,CAAAa,UACXH,EAAAA,EAAAA,KAACR,EAAK,CACJkB,IACEF,EAAK,mCAAAjC,OAAsCiC,GAAUG,EAEvDC,IAAKL,OAGTP,EAAAA,EAAAA,KAACN,EAAI,CAAAS,SAAEI,MATED,EAYf,OAIR,CAEAT,EAAWgB,UAAY,CACrBd,OAAQe,IAAAA,QACNA,IAAAA,MAAgB,CACdR,GAAIQ,IAAAA,OACJP,KAAMO,IAAAA,OACNN,MAAOM,IAAAA,UAETC,YAGJ,QCTA,MAzBA,WACE,IAAQhD,GAAYiD,EAAAA,EAAAA,MAAZjD,QACRkD,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnClB,EAAMoB,EAAA,GAAEE,EAASF,EAAA,GAoBxB,OAlBAG,EAAAA,EAAAA,YAAU,WACRC,EAAgBxD,GAASyD,MAAK,SAAA1B,GAAe,IAAZ2B,EAAI3B,EAAJ2B,KACzBC,EAAY,GAElBD,EAAKrB,KAAI,SAAAC,GAAiC,IAClCsB,EAAQ,CACZrB,GAFUD,EAAFC,GAGRC,KAHgBF,EAAJE,KAIZC,MAJ8BH,EAAZuB,cAOpB,OAAOF,EAAUG,KAAKF,EACxB,IAEAN,EAAUK,EACZ,GACF,GAAG,CAAC3D,IAEGgC,IAAUC,EAAAA,EAAAA,KAACH,EAAU,CAACE,OAAQA,GACvC,C","sources":["API/get-movie-credits.js","components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","pages/Cast.js"],"sourcesContent":["async function getMovieCredits(movieId) {\n  const key = 'd783920aea034ba2adae6031a0bf96c0';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getMovieCredits;\n","import styled from '@emotion/styled';\nimport { accentTextColor } from 'utilities/variables/css';\n\nexport const List = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n\n  @media (min-width: 768px) {\n    width: calc((100% - 10px * 8) / 4);\n    margin: 10px;\n  }\n`;\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 375px;\n  margin-bottom: 15px;\n`;\n\nexport const Photo = styled.img`\n  width: 250px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${accentTextColor};\n`;\n","import propTypes from 'prop-types';\nimport actorBg from '../../utilities/images/actor.png';\nimport Container from 'components/Container';\nimport { List, Item, PhotoWrapper, Photo, Name } from './ActorsList.styled';\n\nfunction ActorsList({ actors }) {\n  return (\n    <Container isPadding>\n      <List>\n        {actors.map(({ id, name, photo }) => {\n          return (\n            <Item key={id}>\n              <PhotoWrapper>\n                <Photo\n                  src={\n                    photo ? `https://image.tmdb.org/t/p/w500/${photo}` : actorBg\n                  }\n                  alt={name}\n                />\n              </PhotoWrapper>\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nActorsList.prototype = {\n  actors: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n      photo: propTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default ActorsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieCredits from 'API/get-movie-credits';\nimport ActorsList from 'components/ActorsList';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => {\n      const actorsArr = [];\n\n      cast.map(({ id, name, profile_path }) => {\n        const actor = {\n          id,\n          name,\n          photo: profile_path,\n        };\n\n        return actorsArr.push(actor);\n      });\n\n      setActors(actorsArr);\n    });\n  }, [movieId]);\n\n  return actors && <ActorsList actors={actors} />;\n}\n\nexport default Cast;\n"],"names":["_getMovieCredits","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","url","filter","response","data","_context","prev","next","concat","fetch","sent","json","abrupt","stop","apply","arguments","_x","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","PhotoWrapper","_templateObject3","Photo","_templateObject4","Name","_templateObject5","accentTextColor","ActorsList","_ref","actors","_jsx","Container","isPadding","children","map","_ref2","id","name","photo","_jsxs","src","actorBg","alt","prototype","propTypes","isRequired","useParams","_useState","useState","_useState2","_slicedToArray","setActors","useEffect","getMovieCredits","then","cast","actorsArr","actor","profile_path","push"],"sourceRoot":""}