{"version":3,"file":"static/js/movie-details-page.cd0f2f3e.chunk.js","mappings":"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","sources":["API/get-movie-details.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["async function getMovieDetails(movieId) {\n  const key = 'd783920aea034ba2adae6031a0bf96c0';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getMovieDetails;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport {\n  accentBgColor,\n  accentTextColor,\n  mainHoverEfect,\n  mainTextColor,\n  secondBgColor,\n  secondTextColor,\n} from 'utilities/variables/css';\n\nexport const ButtonGoBack = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n  margin-bottom: 30px;\n\n  font-size: 15px;\n  font-family: inherit;\n\n  background-color: ${secondBgColor};\n  color: ${secondTextColor};\n  border: none;\n\n  cursor: pointer;\n  transition: background-color ${mainHoverEfect}, color ${mainHoverEfect};\n\n  :hover {\n    background-color: ${accentBgColor};\n    color: ${secondTextColor};\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n\nexport const MainWrapper = styled.div`\n  margin-bottom: 100px;\n\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  @media (min-width: 768px) {\n    margin-left: 50px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 30px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  color: ${accentTextColor};\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 25px;\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 50px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 50px;\n\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const GenresItem = styled.li`\n  font-weight: 700;\n  font-size: 15px;\n  margin-right: 15px;\n\n  :last-child {\n    margin-right: 0;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Description = styled.p`\n  line-height: 2;\n  font-size: 15px;\n  margin-bottom: 50px;\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const VoteWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const VoteCount = styled.p`\n  font-size: 18px;\n`;\n\nexport const Value = styled.span`\n  font-weight: 700;\n`;\n\nexport const AdditionalWrapper = styled.div``;\n\nexport const AdditionalTitle = styled.p`\n  text-transform: uppercase;\n  background-color: ${accentBgColor};\n  color: ${secondTextColor};\n  padding: 15px;\n  margin-bottom: 30px;\n`;\n\nexport const NavigationsList = styled.ul``;\n\nexport const NavigationsItem = styled.li`\n  margin-bottom: 15px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CustomLink = styled(NavLink)`\n  font-size: 18px;\n  color: ${mainTextColor};\n\n  &.active {\n    color: ${accentTextColor};\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.jpg';\nimport Container from 'components/Container';\nimport {\n  ButtonGoBack,\n  Label,\n  MainWrapper,\n  Poster,\n  InfoWrapper,\n  TitleWrapper,\n  Title,\n  ReleaseDate,\n  GenresList,\n  GenresItem,\n  Description,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n  AdditionalWrapper,\n  AdditionalTitle,\n  NavigationsList,\n  NavigationsItem,\n  CustomLink,\n} from './MovieDetails.styled';\nimport { FaChevronRight, FaChevronLeft } from 'react-icons/fa';\n\nfunction MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n    voteCount,\n  } = movieInfo;\n\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <Container>\n      <ButtonGoBack type=\"button\" onClick={onGoBack}>\n        <FaChevronLeft />\n        <Label>Go back</Label>\n      </ButtonGoBack>\n\n      <MainWrapper>\n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg}\n          alt={title}\n        />\n        <InfoWrapper>\n          <TitleWrapper>\n            <Title>{title}</Title>\n            <ReleaseDate>{releaseDate}</ReleaseDate>\n          </TitleWrapper>\n          <GenresList>\n            {genres &&\n              genres.map(({ name, id }) => (\n                <GenresItem key={id}>{name}</GenresItem>\n              ))}\n          </GenresList>\n          <Description>{description}</Description>\n          <VoteWrapper>\n            <VoteAverage>\n              Vote average: <Value>{voteAverage}</Value>\n            </VoteAverage>\n            <VoteCount>\n              Vote count: <Value>{voteCount}</Value>\n            </VoteCount>\n          </VoteWrapper>\n        </InfoWrapper>\n      </MainWrapper>\n\n      <AdditionalWrapper>\n        <AdditionalTitle>Additional Information</AdditionalTitle>\n        <NavigationsList>\n          <NavigationsItem>\n            <CustomLink to=\"cast\" state={{ from: subLocation }}>\n              <FaChevronRight /> Cast\n            </CustomLink>\n          </NavigationsItem>\n          <NavigationsItem>\n            <CustomLink to=\"reviews\" state={{ from: subLocation }}>\n              <FaChevronRight /> Reviews\n            </CustomLink>\n          </NavigationsItem>\n        </NavigationsList>\n      </AdditionalWrapper>\n    </Container>\n  );\n}\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      }),\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n\nexport default MovieDetails;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\nimport getMovieDetails from 'API/get-movie-details';\nimport MovieDetails from 'components/MovieDetails';\nimport Loader from 'components/Loader';\n\nconst Cast = lazy(() =>\n  import('./Cast.js' /* webpackChunkName: \"cast-view\" */),\n);\nconst Reviews = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: \"review-view\" */),\n);\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(\n      ({\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieInfo = {\n          title: original_title,\n          genres: genres,\n          description: overview,\n          poster: poster_path,\n          releaseDate: release_date,\n          voteAverage: vote_average,\n          voteCount: vote_count,\n        };\n\n        return setMovieInfo(movieInfo);\n      },\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","url","filter","response","data","_context","prev","next","concat","fetch","sent","json","abrupt","stop","apply","arguments","_x","ButtonGoBack","styled","_templateObject","_taggedTemplateLiteral","secondBgColor","secondTextColor","mainHoverEfect","accentBgColor","Label","_templateObject2","MainWrapper","_templateObject3","Poster","_templateObject4","InfoWrapper","_templateObject5","TitleWrapper","_templateObject6","Title","_templateObject7","accentTextColor","ReleaseDate","_templateObject8","GenresList","_templateObject9","GenresItem","_templateObject10","Description","_templateObject11","VoteWrapper","_templateObject12","VoteAverage","_templateObject13","VoteCount","_templateObject14","Value","_templateObject15","AdditionalWrapper","_templateObject16","AdditionalTitle","_templateObject17","NavigationsList","_templateObject18","NavigationsItem","_templateObject19","CustomLink","NavLink","_templateObject20","mainTextColor","MovieDetails","_ref","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","voteAverage","voteCount","_jsxs","Container","children","type","onClick","_location$state$from","_location$state","_jsx","FaChevronLeft","src","posterBg","alt","map","_ref2","name","id","to","FaChevronRight","prototype","propTypes","Cast","lazy","Reviews","useParams","_useState","useState","_useState2","_slicedToArray","setMovieInfo","useEffect","getMovieDetails","then","original_title","overview","poster_path","release_date","vote_average","vote_count","_Fragment","Suspense","fallback","Loader","Routes","Route","path","element","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err","undefined"],"sourceRoot":""}